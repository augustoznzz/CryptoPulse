Crie um software em Python que analise o mercado de criptomoedas, focando em uma moeda específica (por exemplo, BTC, ETH ou outra que eu informar como input), comparada ao USDT. O software deve puxar dados históricos das últimas 24 horas, 3 dias, 7 dias, 14 dias, 1 mês e 3 meses de uma API confiável como CoinGecko, Binance ou CCXT (integre a biblioteca ccxt para isso).
Use indicadores financeiros avançados e matemática para uma análise profunda, incluindo:

Médias Móveis Simples (SMA) e Exponenciais (EMA) para identificar tendências de suporte e resistência.
RSI (Relative Strength Index) para detectar sobrecompra (>70) ou sobrevenda (<30).
MACD para cruzamentos de sinal e histogramas que indiquem momentum.
Bandas de Bollinger para medir volatilidade e possíveis reversões.
Análise de volume para confirmar força das tendências.
Matemática avançada: Regressão linear para prever preços futuros baseados em dados históricos, cálculo de desvio padrão para risco, e optionally um modelo ARIMA para forecasting de séries temporais.

Baseado nessa análise multi-período, determine a melhor opção de operação: LONG (compra, se a tendência for de alta) ou SHORT (venda, se de baixa). Calcule valores realistas para:

Entry: Preço de entrada sugerido, baseado na média do preço atual e suporte/resistência.
Take-Profit Targets (TP1 a TP4): Níveis progressivos de lucro, usando Fibonacci retracements (ex.: 0.618, 1.0, 1.618) ou múltiplos do risco-recompensa (ex.: 1:2, 1:3).
Stop-loss: Nível de perda máxima, baseado em volatilidade (ex.: abaixo do suporte mais próximo).
Safe Stop-loss: Um stop-loss mais conservador, talvez 1-2% além do principal.
Leverage: Sugira de 1x a 5x, dependendo da volatilidade (baixa volatilidade = maior leverage).

O output deve ser exatamente neste formato de texto, substituindo com valores calculados (use o número de casas decimais necessário para precisão, ex.: 0.03586 para moedas de baixo valor):
[MOEDA]/USDT 🔼 [TIPO DA OPERAÇÃO (LONG OU SHORT)]
📍 Entry: X.XXXXX
🎯 Take-Profit Targets:
✅ TP1: X.XXXXX
✅ TP2: X.XXXXX
✅ TP3: X.XXXXX
✅ TP4: X.XXXXX
❌ Stop-loss: X.XXXXX
❌ Safe Stop-loss: X.XXXXX
📈 Leverage: [Ex: 1x, 2x, 3x ... ]
Inclua o código completo do software, com comentários explicando cada parte, e instruções para rodá-lo (ex.: 'python script.py --moeda BTC'). Teste com um exemplo simulado para BTC/USDT e mostre o output."